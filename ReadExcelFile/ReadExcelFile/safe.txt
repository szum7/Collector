using NPOI.HSSF.UserModel;
using NPOI.SS.UserModel;
using NPOI.XSSF.UserModel;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace ReadExcelFile.NPOI
{
    class ReadExcel
    {
        public ReadExcel()
        {

        }

        public void Run(string path, string fileExtension)
        {
            //IFormFile file = Request.Form.Files[0];
            //string folderName = "Upload";
            //string webRootPath = _hostingEnvironment.WebRootPath;
            //string newPath = Path.Combine(webRootPath, folderName);
            //StringBuilder sb = new StringBuilder();
            //if (!Directory.Exists(newPath))
            //{
            //    Directory.CreateDirectory(newPath);
            //}
            //if (file.Length > 0)
            //{

            StringBuilder sb = new StringBuilder();
            ISheet sheet;
            //string fullPath = Path.Combine("", fileName);

            using (var stream = new FileStream(path, FileMode.Open))
            {
                //file.CopyTo(stream);
                stream.Position = 0;
                if (fileExtension == ".xls")
                {
                    HSSFWorkbook hssfwb = new HSSFWorkbook(stream); //This will read the Excel 97-2000 formats  
                    sheet = hssfwb.GetSheetAt(0); //get first sheet from workbook  
                }
                else
                {
                    XSSFWorkbook hssfwb = new XSSFWorkbook(stream); //This will read 2007 Excel format  
                    sheet = hssfwb.GetSheetAt(0); //get first sheet from workbook   
                }
                IRow headerRow = sheet.GetRow(0); //Get Header Row
                int cellCount = headerRow.LastCellNum;
                sb.Append("<table class='table'><tr>");
                for (int j = 0; j < cellCount; j++)
                {
                    ICell cell = headerRow.GetCell(j);
                    if (cell == null || string.IsNullOrWhiteSpace(cell.ToString()))
                        continue;
                    sb.Append("<th>" + cell.ToString() + "</th>");
                }
                sb.Append("</tr>");
                sb.AppendLine("<tr>");
                for (int i = (sheet.FirstRowNum + 1); i <= sheet.LastRowNum; i++) //Read Excel File
                {
                    IRow row = sheet.GetRow(i);
                    if (row == null) continue;
                    if (row.Cells.All(d => d.CellType == CellType.Blank))
                        continue;
                    for (int j = row.FirstCellNum; j < cellCount; j++)
                    {
                        if (row.GetCell(j) != null)
                            sb.Append("<td>" + row.GetCell(j).ToString() + "</td>");
                    }
                    sb.AppendLine("</tr>");
                }
                sb.Append("</table>");
            }
            Console.WriteLine(sb.ToString());
            //}
            //return this.Content(sb.ToString());
        }
    }
}
